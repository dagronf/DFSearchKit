{"Protocols/DFIndexControllerAsyncProtocol.html#/c:@M@dfindex@objc(pl)DFIndexControllerAsyncProtocol(im)queueDidEmpty:":{"name":"queueDidEmpty(_:)","abstract":"<p>The queue is now empty</p>","parent_name":"DFIndexControllerAsyncProtocol"},"Protocols/DFIndexControllerAsyncProtocol.html#/c:@M@dfindex@objc(pl)DFIndexControllerAsyncProtocol(im)queueDidChange:count:":{"name":"queueDidChange(_:count:)","abstract":"<p>The queue&rsquo;s operation count did change</p>","parent_name":"DFIndexControllerAsyncProtocol"},"Protocols/DFIndexControllerAsyncProtocol.html":{"name":"DFIndexControllerAsyncProtocol","abstract":"<p>Protocol for notifying a delegate when the operation queue changes state</p>"},"Enums/DFIndexType.html#/c:@M@dfindex@E@DFIndexType@DFIndexTypeUnknown":{"name":"unknown","abstract":"<p>Unknown index type (kSKIndexUnknown)</p>","parent_name":"DFIndexType"},"Enums/DFIndexType.html#/c:@M@dfindex@E@DFIndexType@DFIndexTypeInverted":{"name":"inverted","abstract":"<p>Inverted index, mapping terms to documents (kSKIndexInverted)</p>","parent_name":"DFIndexType"},"Enums/DFIndexType.html#/c:@M@dfindex@E@DFIndexType@DFIndexTypeVector":{"name":"vector","abstract":"<p>Vector index, mapping documents to terms (kSKIndexVector)</p>","parent_name":"DFIndexType"},"Enums/DFIndexType.html#/c:@M@dfindex@E@DFIndexType@DFIndexTypeInvertedVector":{"name":"invertedVector","abstract":"<p>Index type with all the capabilities of an inverted and a vector index (kSKIndexInvertedVector)</p>","parent_name":"DFIndexType"},"Enums/DFIndexType.html":{"name":"DFIndexType","abstract":"<p>The type of index to create. Maps directly onto SKIndexType</p>"},"Classes/DFSummary/Paragraph.html#/s:7dfindex9DFSummaryC9ParagraphCAESS4text_Si4rankSi14paragraphOrdertcfc":{"name":"init(text:rank:paragraphOrder:)","abstract":"<p>Undocumented</p>","parent_name":"Paragraph"},"Classes/DFSummary/Paragraph.html#/s:7dfindex9DFSummaryC9ParagraphC4textSSvp":{"name":"text","abstract":"<p>Undocumented</p>","parent_name":"Paragraph"},"Classes/DFSummary/Paragraph.html#/s:7dfindex9DFSummaryC9ParagraphC4rankSivp":{"name":"rank","abstract":"<p>Undocumented</p>","parent_name":"Paragraph"},"Classes/DFSummary/Paragraph.html#/s:7dfindex9DFSummaryC9ParagraphC14paragraphOrderSivp":{"name":"paragraphOrder","abstract":"<p>Undocumented</p>","parent_name":"Paragraph"},"Classes/DFSummary/Sentence.html#/s:7dfindex9DFSummaryC8SentenceCAESS4text_Si4rankSi13sentenceOrderSi09paragraphG0tcfc":{"name":"init(text:rank:sentenceOrder:paragraphOrder:)","abstract":"<p>Undocumented</p>","parent_name":"Sentence"},"Classes/DFSummary/Sentence.html#/s:7dfindex9DFSummaryC8SentenceC4textSSvp":{"name":"text","abstract":"<p>Undocumented</p>","parent_name":"Sentence"},"Classes/DFSummary/Sentence.html#/s:7dfindex9DFSummaryC8SentenceC4rankSivp":{"name":"rank","abstract":"<p>Undocumented</p>","parent_name":"Sentence"},"Classes/DFSummary/Sentence.html#/s:7dfindex9DFSummaryC8SentenceC13sentenceOrderSivp":{"name":"sentenceOrder","abstract":"<p>Undocumented</p>","parent_name":"Sentence"},"Classes/DFSummary/Sentence.html#/s:7dfindex9DFSummaryC8SentenceC14paragraphOrderSivp":{"name":"paragraphOrder","abstract":"<p>Undocumented</p>","parent_name":"Sentence"},"Classes/DFSummary/Sentence.html":{"name":"Sentence","abstract":"<p>Undocumented</p>","parent_name":"DFSummary"},"Classes/DFSummary/Paragraph.html":{"name":"Paragraph","abstract":"<p>Undocumented</p>","parent_name":"DFSummary"},"Classes/DFSummary.html#/c:@M@dfindex@objc(cs)DFSummary(im)init:":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"DFSummary"},"Classes/DFSummary.html#/c:@M@dfindex@objc(cs)DFSummary(im)sentenceCount":{"name":"sentenceCount()","abstract":"<p>Undocumented</p>","parent_name":"DFSummary"},"Classes/DFSummary.html#/c:@M@dfindex@objc(cs)DFSummary(im)sentenceSummaryWithMaxSentences:":{"name":"sentenceSummary(maxSentences:)","abstract":"<p>Undocumented</p>","parent_name":"DFSummary"},"Classes/DFSummary.html#/c:@M@dfindex@objc(cs)DFSummary(im)paragraphCount":{"name":"paragraphCount()","abstract":"<p>Undocumented</p>","parent_name":"DFSummary"},"Classes/DFSummary.html#/c:@M@dfindex@objc(cs)DFSummary(im)paragraphSummaryWithMaxParagraphs:":{"name":"paragraphSummary(maxParagraphs:)","abstract":"<p>Undocumented</p>","parent_name":"DFSummary"},"Classes/DFIndexFile.html#/c:@M@dfindex@objc(cs)DFIndexFile(py)fileURL":{"name":"fileURL","abstract":"<p>The file url where the index is located</p>","parent_name":"DFIndexFile"},"Classes/DFIndexFile.html#/c:@M@dfindex@objc(cs)DFIndexFile(cm)openFrom:writable:":{"name":"open(from:writable:)","abstract":"<p>Open an index from a file url.</p>","parent_name":"DFIndexFile"},"Classes/DFIndexFile.html#/c:@M@dfindex@objc(cs)DFIndexFile(cm)createWith:properties:":{"name":"create(with:properties:)","abstract":"<p>Create an indexer using a new data container for the store</p>","parent_name":"DFIndexFile"},"Classes/DFIndexData.html#/c:@M@dfindex@objc(cs)DFIndexData(cm)createWithProperties:":{"name":"create(properties:)","abstract":"<p>Create an indexer using a new data container for the store</p>","parent_name":"DFIndexData"},"Classes/DFIndexData.html#/c:@M@dfindex@objc(cs)DFIndexData(cm)loadFrom:":{"name":"load(from:)","abstract":"<p>Create an indexer using the data stored in &lsquo;data&rsquo;.</p>","parent_name":"DFIndexData"},"Classes/DFIndexData.html#/c:@M@dfindex@objc(cs)DFIndexData(im)save":{"name":"save()","abstract":"<p>Returns the index content as a (copied) Swift Data object</p>","parent_name":"DFIndexData"},"Classes/DFIndexControllerAsync/SearchTask.html#/s:7dfindex22DFIndexControllerAsyncC10SearchTaskC5querySSvp":{"name":"query","abstract":"<p>The search term used to create the task</p>","parent_name":"SearchTask"},"Classes/DFIndexControllerAsync/SearchTask.html#/s:7dfindex22DFIndexControllerAsyncC10SearchTaskC4nextySi_Sd7timeoutyAE_AA0B0C011ProgressiveE0C7ResultsCtc8completetF":{"name":"next(_:timeout:complete:)","abstract":"<p>Undocumented</p>","parent_name":"SearchTask"},"Classes/DFIndexControllerAsync/FileTask.html#/s:7dfindex22DFIndexControllerAsyncC8FileTaskC4urlsSay10Foundation3URLVGvp":{"name":"urls","abstract":"<p>Undocumented</p>","parent_name":"FileTask"},"Classes/DFIndexControllerAsync/FileTask.html#/s:7dfindex22DFIndexControllerAsyncC8FileTaskCAESay10Foundation3URLVGcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"FileTask"},"Classes/DFIndexControllerAsync/TextTask.html#/s:7dfindex22DFIndexControllerAsyncC8TextTaskC3url10Foundation3URLVvp":{"name":"url","abstract":"<p>Undocumented</p>","parent_name":"TextTask"},"Classes/DFIndexControllerAsync/TextTask.html#/s:7dfindex22DFIndexControllerAsyncC8TextTaskC4textSSvp":{"name":"text","abstract":"<p>Undocumented</p>","parent_name":"TextTask"},"Classes/DFIndexControllerAsync/TextTask.html#/s:7dfindex22DFIndexControllerAsyncC8TextTaskCAE10Foundation3URLV3url_SS4texttcfc":{"name":"init(url:text:)","abstract":"<p>Undocumented</p>","parent_name":"TextTask"},"Classes/DFIndexControllerAsync.html#/c:@M@dfindex@objc(cs)DFIndexControllerAsync(py)queueComplete":{"name":"queueComplete","abstract":"<p>Is the controller currently processing requests?</p>","parent_name":"DFIndexControllerAsync"},"Classes/DFIndexControllerAsync.html#/c:@M@dfindex@objc(cs)DFIndexControllerAsync(py)queueSize":{"name":"queueSize","abstract":"<p>The total number of outstanding requests</p>","parent_name":"DFIndexControllerAsync"},"Classes/DFIndexControllerAsync.html#/s:7dfindex22DFIndexControllerAsyncCAcA0B0C5index_AA0bcD8Protocol_pSg8delegatetcfc":{"name":"init(index:delegate:)","abstract":"<p>Undocumented</p>","parent_name":"DFIndexControllerAsync"},"Classes/DFIndexControllerAsync.html#/c:@M@dfindex@objc(cs)DFIndexControllerAsync(im)observeValueForKeyPath:ofObject:change:context:":{"name":"observeValue(forKeyPath:of:change:context:)","abstract":"<p>Undocumented</p>","parent_name":"DFIndexControllerAsync"},"Classes/DFIndexControllerAsync.html#/c:@M@dfindex@objc(cs)DFIndexControllerAsync(im)cancelCurrent:":{"name":"cancelCurrent(_:)","abstract":"<p>Cancel all the outstanding requests if they haven&rsquo;t already been started.</p>","parent_name":"DFIndexControllerAsync"},"Classes/DFIndexControllerAsync.html#/c:@M@dfindex@objc(cs)DFIndexControllerAsync(im)waitUntilQueueIsComplete:":{"name":"waitUntilQueueIsComplete(_:)","abstract":"<p>Call back when the operation queue is complete (ie. empty)</p>","parent_name":"DFIndexControllerAsync"},"Classes/DFIndexControllerAsync/TextTask.html":{"name":"TextTask","abstract":"<p>A task for handling text input</p>","parent_name":"DFIndexControllerAsync"},"Classes/DFIndexControllerAsync/FileTask.html":{"name":"FileTask","abstract":"<p>A task for handling file input</p>","parent_name":"DFIndexControllerAsync"},"Classes/DFIndexControllerAsync/SearchTask.html":{"name":"SearchTask","abstract":"<p>A task for handling searches</p>","parent_name":"DFIndexControllerAsync"},"Classes/DFIndexControllerAsync.html#/c:@CM@dfindex@objc(cs)DFIndexControllerAsync(im)addTextWithAsync:flushWhenComplete:complete:":{"name":"addText(async:flushWhenComplete:complete:)","abstract":"<p>Add text elements to the index asynchronously</p>","parent_name":"DFIndexControllerAsync"},"Classes/DFIndexControllerAsync.html#/c:@CM@dfindex@objc(cs)DFIndexControllerAsync(im)addURLsWithAsync:flushWhenComplete:complete:":{"name":"addURLs(async:flushWhenComplete:complete:)","abstract":"<p>Add file urls to the index asynchronously.</p>","parent_name":"DFIndexControllerAsync"},"Classes/DFIndexControllerAsync.html#/c:@CM@dfindex@objc(cs)DFIndexControllerAsync(im)pruneWithComplete:":{"name":"prune(complete:)","abstract":"<p>Remove all documents with zero terms from the index</p>","parent_name":"DFIndexControllerAsync"},"Classes/DFIndexControllerAsync.html#/c:@CM@dfindex@objc(cs)DFIndexControllerAsync(im)removeTextWithAsync:flushWhenComplete:complete:":{"name":"removeText(async:flushWhenComplete:complete:)","abstract":"<p>Remove text async</p>","parent_name":"DFIndexControllerAsync"},"Classes/DFIndexControllerAsync.html#/c:@CM@dfindex@objc(cs)DFIndexControllerAsync(im)removeURLsWithAsync:flushWhenComplete:complete:":{"name":"removeURLs(async:flushWhenComplete:complete:)","abstract":"<p>Remove documents async</p>","parent_name":"DFIndexControllerAsync"},"Classes/DFIndexControllerAsync.html#/c:@CM@dfindex@objc(cs)DFIndexControllerAsync(im)searchWithAsync:":{"name":"search(async:)","abstract":"<p>Create a search task</p>","parent_name":"DFIndexControllerAsync"},"Classes/DFIndex/ProgressiveSearch/Results.html#/s:7dfindex7DFIndexC17ProgressiveSearchC7ResultsCAGSb04moreE9Available_SayAC0D6ResultCG7resultstcfc":{"name":"init(moreResultsAvailable:results:)","abstract":"<p>Undocumented</p>","parent_name":"Results"},"Classes/DFIndex/ProgressiveSearch/Results.html#/s:7dfindex7DFIndexC17ProgressiveSearchC7ResultsC04moreE9AvailableSbvp":{"name":"moreResultsAvailable","abstract":"<p>Undocumented</p>","parent_name":"Results"},"Classes/DFIndex/ProgressiveSearch/Results.html#/s:7dfindex7DFIndexC17ProgressiveSearchC7ResultsC7resultsSayAC0D6ResultCGvp":{"name":"results","abstract":"<p>Undocumented</p>","parent_name":"Results"},"Classes/DFIndex/ProgressiveSearch/Results.html":{"name":"Results","abstract":"<p>Progressive search result.</p>","parent_name":"ProgressiveSearch"},"Classes/DFIndex/ProgressiveSearch.html#/s:7dfindex7DFIndexC17ProgressiveSearchC6cancelyyF":{"name":"cancel()","abstract":"<p>Cancels an active search</p>","parent_name":"ProgressiveSearch"},"Classes/DFIndex/ProgressiveSearch.html#/s:7dfindex7DFIndexC17ProgressiveSearchC4nextAE7ResultsCSi_Sd7timeouttF":{"name":"next(_:timeout:)","abstract":"<p>Get the next chunk of results</p>","parent_name":"ProgressiveSearch"},"Classes/DFIndex/SearchResult.html#/s:7dfindex7DFIndexC12SearchResultCAE10Foundation3URLV3url_Sf5scoretcfc":{"name":"init(url:score:)","abstract":"<p>Undocumented</p>","parent_name":"SearchResult"},"Classes/DFIndex/SearchResult.html#/s:7dfindex7DFIndexC12SearchResultC3url10Foundation3URLVvp":{"name":"url","abstract":"<p>Undocumented</p>","parent_name":"SearchResult"},"Classes/DFIndex/SearchResult.html#/s:7dfindex7DFIndexC12SearchResultC5scoreSfvp":{"name":"score","abstract":"<p>Undocumented</p>","parent_name":"SearchResult"},"Classes/DFIndex/TermState.html#/s:7dfindex7DFIndexC9TermStateO3allA2EmF":{"name":"all","abstract":"<p>Undocumented</p>","parent_name":"TermState"},"Classes/DFIndex/TermState.html#/s:7dfindex7DFIndexC9TermStateO5emptyA2EmF":{"name":"empty","abstract":"<p>Undocumented</p>","parent_name":"TermState"},"Classes/DFIndex/TermState.html#/s:7dfindex7DFIndexC9TermStateO8notEmptyA2EmF":{"name":"notEmpty","abstract":"<p>Undocumented</p>","parent_name":"TermState"},"Classes/DFIndex/TermCount.html#/s:7dfindex7DFIndexC9TermCountCAESS4term_Si5counttcfc":{"name":"init(term:count:)","abstract":"<p>Undocumented</p>","parent_name":"TermCount"},"Classes/DFIndex/TermCount.html#/s:7dfindex7DFIndexC9TermCountC4termSSvp":{"name":"term","abstract":"<p>Undocumented</p>","parent_name":"TermCount"},"Classes/DFIndex/TermCount.html#/s:7dfindex7DFIndexC9TermCountC5countSivp":{"name":"count","abstract":"<p>Undocumented</p>","parent_name":"TermCount"},"Classes/DFIndex/CreateProperties.html#/s:7dfindex7DFIndexC16CreatePropertiesCAeA0B4TypeO05indexE0_Sb17proximityIndexings3SetVySSG9stopWordsSi13minTermLengthtcfc":{"name":"init(indexType:proximityIndexing:stopWords:minTermLength:)","abstract":"<p>Create a properties object with the specified creation parameters</p>","parent_name":"CreateProperties"},"Classes/DFIndex/CreateProperties.html":{"name":"CreateProperties","abstract":"<p>Container for storing the properties to be used when creating a new index</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@M@dfindex@objc(cs)DFIndex(im)close":{"name":"close()","abstract":"<p>Close the index</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)add:text:canReplace:":{"name":"add(_:text:canReplace:)","abstract":"<p>Add some text to the index</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)addWithUrl:mimeType:canReplace:":{"name":"add(url:mimeType:canReplace:)","abstract":"<p>Add a file as a document to the index</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)addFolderContentWithFolderURL:canReplace:":{"name":"addFolderContent(folderURL:canReplace:)","abstract":"<p>Recursively add the files contained within a folder to the search index</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)removeWithUrl:":{"name":"remove(url:)","abstract":"<p>Remove a document from the index</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)removeWithUrls:":{"name":"remove(urls:)","abstract":"<p>Undocumented</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)documentState:":{"name":"documentState(_:)","abstract":"<p>Returns the indexing state for the specified URL.</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)documentIndexed:":{"name":"documentIndexed(_:)","abstract":"<p>Returns true if the document represented by url has been indexed, false otherwise.</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)setDocumentProperties:properties:":{"name":"setDocumentProperties(_:properties:)","abstract":"<p>Sets additional properties for the document which are retained in the index.</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)documentProperties:":{"name":"documentProperties(_:)","abstract":"<p>Returns additional properties for the document</p>","parent_name":"DFIndex"},"Classes/DFIndex/TermCount.html":{"name":"TermCount","abstract":"<p>A class to contain a term and the count of times it appears</p>","parent_name":"DFIndex"},"Classes/DFIndex/TermState.html":{"name":"TermState","abstract":"<p>Undocumented</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)documentsWithTermState:":{"name":"documents(termState:)","abstract":"<p>Returns all the document URLs loaded into the index matching the specified term state</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)termCountFor:":{"name":"termCount(for:)","abstract":"<p>Returns the number of terms for the specified document url</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)isEmptyFor:":{"name":"isEmpty(for:)","abstract":"<p>Is the specified document empty (ie. it has no terms)</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)termsFor:":{"name":"terms(for:)","abstract":"<p>Returns an array containing the terms and counts for a specified URL</p>","parent_name":"DFIndex"},"Classes/DFIndex/SearchResult.html":{"name":"SearchResult","abstract":"<p>Undocumented</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)progressiveSearchWithQuery:options:":{"name":"progressiveSearch(query:options:)","abstract":"<p>Start a progressive search</p>","parent_name":"DFIndex"},"Classes/DFIndex/ProgressiveSearch.html":{"name":"ProgressiveSearch","abstract":"<p>Undocumented</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)search:limit:timeout:options:":{"name":"search(_:limit:timeout:options:)","abstract":"<p>Perform a search</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)flush":{"name":"flush()","abstract":"<p>Flush any pending commands to the search index. A flush should ALWAYS be called before performing a search</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)compact":{"name":"compact()","abstract":"<p>Reduce the size of the index where possible.</p>","parent_name":"DFIndex"},"Classes/DFIndex.html#/c:@CM@dfindex@objc(cs)DFIndex(im)pruneWithProgress:":{"name":"prune(progress:)","abstract":"<p>Remove any documents that have no search terms</p>","parent_name":"DFIndex"},"Classes/DFIndex.html":{"name":"DFIndex","abstract":"<p>Indexer using SKIndex as the core</p>"},"Classes/DFIndexControllerAsync.html":{"name":"DFIndexControllerAsync","abstract":"<p>A controller for a DFIndex object that supports asynchronous calls to the index</p>"},"Classes/DFIndexData.html":{"name":"DFIndexData","abstract":"<p>A memory-based index using NSMutableData as the backing.</p>"},"Classes/DFIndexFile.html":{"name":"DFIndexFile","abstract":"<p>A file-based index</p>"},"Classes/DFSummary.html":{"name":"DFSummary","abstract":"<p>Undocumented</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}